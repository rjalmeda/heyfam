{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/user-video.service.ts","./src/app/socket-service.service.ts","./src/app/app-routing.module.ts","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  Component,\n  ViewChildren,\n  ViewChild,\n  ElementRef,\n  AfterViewChecked,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { SafeResourceUrl } from \"@angular/platform-browser\";\nimport { SocketServiceService, IConnection } from \"./socket-service.service\";\nimport { UserVideoService } from \"./user-video.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent implements AfterViewChecked {\n  public connections: IConnection[] = [];\n  public userCam: any;\n  public screenCapEnabled = false;\n  public currentChannel: string | SafeResourceUrl;\n\n  // @ViewChild(\"userWindow\", { static: false, read: ElementRef })\n  // private userWindow: ElementRef;\n\n  @ViewChildren(\"videoStreams\")\n  private videoStreamsWindows: ElementRef[];\n\n  constructor(\n    private socketService: SocketServiceService,\n    private userVideoService: UserVideoService\n  ) {\n    this.socketService.connections.subscribe((d) => {\n      this.connections = d;\n    });\n\n    this.socketService.currentChannel.subscribe((channel) => {\n      this.currentChannel = channel;\n    });\n  }\n\n  public ngAfterViewChecked(): void {\n    this.videoStreamsWindows.forEach((s) => {\n      if (!s.nativeElement.srcObject) {\n        const c = this.connections.find(\n          (connection) => connection.sessionId === s.nativeElement.id\n        );\n        s.nativeElement.srcObject = c.stream;\n      }\n    });\n  }\n\n  getVideoWindow(id: string) {}\n\n  // public enableScreenCapture() {\n  //   this.screenCapEnabled = true;\n  //   this.userVideoService.getUserScreen().subscribe((screen: any) => {\n  //     screen.getVideoTracks()[0].addEventListener(\"ended\", () => {\n  //       this.enableUserCam();\n  //     });\n  //     this.playStream(this.userWindow, screen);\n  //   });\n  // }\n\n  // public enableUserCam(): void {\n  //   this.screenCapEnabled = false;\n  //   this.playStream(this.userWindow, this.userCam);\n  // }\n\n  public showConnections(connection?: any): void {\n    if (connection) {\n    } else {\n    }\n  }\n\n  private playStream(elRef: ElementRef, stream: any): void {\n    const videoWindow = elRef.nativeElement;\n    videoWindow.srcObject = stream;\n    videoWindow.muted = true;\n    videoWindow.play();\n    videoWindow.addEventListener(\"ended\", () => {});\n  }\n}\n","<div class=\"grid-wrapper\">\n  <div class=\"main-window\">\n    <iframe [src]=\"currentChannel\" frameborder=\"0\" allowfullscreen allow=\"autoplay\">\n\n    </iframe>\n  </div>\n  <video *ngFor=\"let c of connections\" #videoStreams autoplay [id]=\"c.sessionId\">\n  </video>\n</div>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\n\nimport { SocketServiceService } from \"./socket-service.service\";\nimport { UserVideoService } from \"./user-video.service\";\nimport { UserService } from \"./user.service\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n  ],\n  providers: [SocketServiceService, UserVideoService, UserService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserVideoService {\n  constructor() { }\n\n  public getUserCam() {\n    return from(navigator.mediaDevices.getUserMedia({video: true, audio: true}));\n  }\n  \n  public getUserScreen() {\n    const displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: false\n    };\n\n    const md:any = navigator.mediaDevices;\n    return from(md.getDisplayMedia(displayMediaOptions));\n  }\n\n  public createPeerConnection() {\n    \n    const configuration = {\n      configuration: {\n        offerToReceiveAudio: true,\n        offerToReceiveVideo: true\n      },\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n    }\n    return new RTCPeerConnection(configuration)\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as io from \"socket.io-client\";\nimport { ReplaySubject, Subject } from \"rxjs\";\nimport { UserVideoService } from \"./user-video.service\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SocketServiceService {\n  public sessionId: string;\n  public allUsers: IConnection[];\n  public connectionsSubject = new Subject<IConnection[]>();\n  public connections = this.connectionsSubject.asObservable();\n\n  public channelSubject = new ReplaySubject<SafeResourceUrl | string>();\n  public currentChannel = this.channelSubject.asObservable();\n\n  private socket: any;\n\n  constructor(\n    private http: HttpClient,\n    private userVideoService: UserVideoService,\n    private sanitizer: DomSanitizer,\n    private snackbar: MatSnackBar\n  ) {\n    this.getSocket();\n    this.setupListeners();\n  }\n\n  getSocket() {\n    this.socket = window[\"socketIo\"]();\n    this.socket.on(\"connect\", () => {\n      this.socket.emit(\"registerStreamer\", {});\n    });\n  }\n\n  setupListeners() {\n    this.socket.on(\"currentChannel\", (channel) => {\n      const url = this.sanitizer.bypassSecurityTrustResourceUrl(channel);\n      this.channelSubject.next(url);\n    });\n\n    this.socket.on(\"sendMessage\", (message: IMessage) => {\n      console.log(\"message received\");\n      this.snackbar.open(\n        `${message.name}${message.name ? \" : \" : \"\"}${message.message}`,\n        null,\n        { duration: 2000 }\n      );\n    });\n\n    this.socket.on(\"sessionId\", (data) => {});\n\n    this.socket.on(\"offer\", async (from, offer) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      if (connection) {\n        connection.peerConnection =\n          this.userVideoService.createPeerConnection();\n\n        const streams = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: {\n            echoCancellation: true,\n          },\n        });\n        streams.getTracks().forEach((track) => {\n          connection.peerConnection.addTrack(track, streams);\n        });\n        connection.peerConnection.onconnectionstatechange = (event) => {};\n        connection.peerConnection.onicecandidate = (event) => {\n          if (event.candidate) {\n            this.socket.emit(\n              \"iceCandidate\",\n              connection.sessionId,\n              this.socket.id,\n              event.candidate\n            );\n          }\n        };\n        connection.peerConnection.setRemoteDescription(\n          new RTCSessionDescription(offer)\n        );\n        connection.peerConnection.ontrack = (event: RTCTrackEvent) => {\n          connection.stream.addTrack(event.track);\n        };\n        const answer = await connection.peerConnection.createAnswer();\n        await connection.peerConnection.setLocalDescription(answer);\n        this.socket.emit(\n          \"answer\",\n          connection.sessionId,\n          this.socket.id,\n          answer\n        );\n      }\n    });\n\n    this.socket.on(\"answer\", async (from, answer) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      const remoteDesc = new RTCSessionDescription(answer);\n      connection.peerConnection.ontrack = (event: RTCTrackEvent) => {\n        connection.stream.addTrack(event.track);\n      };\n      await connection.peerConnection.setRemoteDescription(remoteDesc);\n    });\n\n    this.socket.on(\"iceCandidate\", async (from, iceCandidate) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      if (iceCandidate) {\n        try {\n          await connection.peerConnection.addIceCandidate(iceCandidate);\n        } catch (e) {\n          // ignore errors\n        }\n      }\n    });\n\n    this.socket.on(\"allClients\", (data) => {\n      data = data.filter((session) => session.sessionId !== this.socket.id);\n      data.forEach(async (d) => {\n        d.peerConnection = this.userVideoService.createPeerConnection();\n        const streams = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: {\n            echoCancellation: true,\n          },\n        });\n        streams.getTracks().forEach((track) => {\n          d.peerConnection.addTrack(track, streams);\n        });\n        d.peerConnection.onconnectionstatechange = (event) => {};\n        d.peerConnection.onicecandidate = (event) => {\n          if (event.candidate) {\n            this.socket.emit(\n              \"iceCandidate\",\n              d.sessionId,\n              this.socket.id,\n              event.candidate\n            );\n          }\n        };\n        const offer = await d.peerConnection.createOffer();\n        await d.peerConnection.setLocalDescription(offer);\n        this.socket.emit(\"offer\", d.sessionId, this.socket.id, offer);\n      });\n      this.allUsers = data;\n      this.allUsers.forEach((u) => {\n        u.stream = new MediaStream();\n      });\n      this.connectionsSubject.next(data);\n    });\n\n    this.socket.on(\"userDisconnected\", (sessionId) => {\n      const idx = this.allUsers.findIndex((u) => u.sessionId === sessionId);\n      if (idx > -1) {\n        this.allUsers.splice(idx, 1);\n      }\n      this.connectionsSubject.next(this.allUsers);\n    });\n\n    this.socket.on(\"newClientConnected\", (connection) => {\n      connection.stream = new MediaStream();\n      this.allUsers.push(connection);\n      this.connectionsSubject.next(this.allUsers);\n    });\n  }\n}\n\nexport interface IConnection {\n  sessionId: string;\n  name: string;\n  peerConnection: RTCPeerConnection;\n  stream: MediaStream;\n}\n\ninterface IMessage {\n  name: string;\n  message: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public readonly userId: string;\n  public userName: string;\n\n  constructor() {\n    this.userId = uuidv4();\n    this.userName = `Guest[${this.userId.split('-')[0]}]`\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}