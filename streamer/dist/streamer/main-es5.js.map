{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/user-video.service.ts","webpack:///src/app/socket-service.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/user.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","socketService","userVideoService","connections","screenCapEnabled","currentChannel","subscribe","d","channel","videoStreamsWindows","forEach","s","nativeElement","srcObject","c","find","connection","sessionId","id","stream","elRef","videoWindow","muted","play","addEventListener","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","UserVideoService","navigator","mediaDevices","getUserMedia","video","audio","displayMediaOptions","cursor","md","getDisplayMedia","configuration","offerToReceiveAudio","offerToReceiveVideo","iceServers","urls","RTCPeerConnection","providedIn","SocketServiceService","http","sanitizer","snackbar","connectionsSubject","asObservable","channelSubject","getSocket","setupListeners","socket","window","on","console","log","emit","bypassSecurityTrustResourceUrl","next","message","open","name","duration","data","from","offer","allUsers","u","peerConnection","createPeerConnection","enumerateDevices","videoStreams","isVideoAvailable","some","kind","echoCancellation","streams","getTracks","track","addTrack","onconnectionstatechange","event","onicecandidate","candidate","setRemoteDescription","RTCSessionDescription","ontrack","createAnswer","answer","setLocalDescription","remoteDesc","iceCandidate","addIceCandidate","filter","session","createOffer","MediaStream","idx","findIndex","splice","push","routes","AppRoutingModule","forRoot","exports","UserService","userId","userName","split","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  Component,\n  ViewChildren,\n  ViewChild,\n  ElementRef,\n  AfterViewChecked,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { SafeResourceUrl } from \"@angular/platform-browser\";\nimport { SocketServiceService, IConnection } from \"./socket-service.service\";\nimport { UserVideoService } from \"./user-video.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent implements AfterViewChecked {\n  public connections: IConnection[] = [];\n  public userCam: any;\n  public screenCapEnabled = false;\n  public currentChannel: string | SafeResourceUrl = \"\";\n  public get channelEnabled() {\n    return !!this.currentChannel;\n  }\n\n  // @ViewChild(\"userWindow\", { static: false, read: ElementRef })\n  // private userWindow: ElementRef;\n\n  @ViewChildren(\"videoStreams\")\n  private videoStreamsWindows: ElementRef[];\n\n  constructor(\n    private socketService: SocketServiceService,\n    private userVideoService: UserVideoService\n  ) {\n    this.socketService.connections.subscribe((d) => {\n      this.connections = d;\n    });\n\n    this.socketService.currentChannel.subscribe((channel) => {\n      this.currentChannel = channel;\n    });\n  }\n\n  public ngAfterViewChecked(): void {\n    this.videoStreamsWindows.forEach((s) => {\n      if (!s.nativeElement.srcObject) {\n        const c = this.connections.find(\n          (connection) => connection.sessionId === s.nativeElement.id\n        );\n        s.nativeElement.srcObject = c.stream;\n      }\n    });\n  }\n\n  getVideoWindow(id: string) {}\n\n  // public enableScreenCapture() {\n  //   this.screenCapEnabled = true;\n  //   this.userVideoService.getUserScreen().subscribe((screen: any) => {\n  //     screen.getVideoTracks()[0].addEventListener(\"ended\", () => {\n  //       this.enableUserCam();\n  //     });\n  //     this.playStream(this.userWindow, screen);\n  //   });\n  // }\n\n  // public enableUserCam(): void {\n  //   this.screenCapEnabled = false;\n  //   this.playStream(this.userWindow, this.userCam);\n  // }\n\n  public showConnections(connection?: any): void {\n    if (connection) {\n    } else {\n    }\n  }\n\n  private playStream(elRef: ElementRef, stream: any): void {\n    const videoWindow = elRef.nativeElement;\n    videoWindow.srcObject = stream;\n    videoWindow.muted = true;\n    videoWindow.play();\n    videoWindow.addEventListener(\"ended\", () => {});\n  }\n}\n","<div\n  class=\"grid-wrapper\"\n  [class.stream-enabled]=\"channelEnabled\"\n  [class.party-mode]=\"!channelEnabled\"\n>\n  <div class=\"main-window\" *ngIf=\"channelEnabled\">\n    <iframe\n      [src]=\"currentChannel\"\n      frameborder=\"0\"\n      allowfullscreen\n      allow=\"autoplay\"\n    >\n    </iframe>\n  </div>\n  <video\n    *ngFor=\"let c of connections\"\n    #videoStreams\n    autoplay\n    [id]=\"c.sessionId\"\n  ></video>\n</div>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { MatSnackBarModule } from \"@angular/material/snack-bar\";\n\nimport { SocketServiceService } from \"./socket-service.service\";\nimport { UserVideoService } from \"./user-video.service\";\nimport { UserService } from \"./user.service\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MatSnackBarModule,\n  ],\n  providers: [SocketServiceService, UserVideoService, UserService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from '@angular/core';\nimport { from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserVideoService {\n  constructor() { }\n\n  public getUserCam() {\n    return from(navigator.mediaDevices.getUserMedia({video: true, audio: true}));\n  }\n  \n  public getUserScreen() {\n    const displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: false\n    };\n\n    const md:any = navigator.mediaDevices;\n    return from(md.getDisplayMedia(displayMediaOptions));\n  }\n\n  public createPeerConnection() {\n    \n    const configuration = {\n      configuration: {\n        offerToReceiveAudio: true,\n        offerToReceiveVideo: true\n      },\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n    }\n    return new RTCPeerConnection(configuration)\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as io from \"socket.io-client\";\nimport { ReplaySubject, Subject } from \"rxjs\";\nimport { UserVideoService } from \"./user-video.service\";\nimport { DomSanitizer, SafeResourceUrl } from \"@angular/platform-browser\";\nimport { MatSnackBar } from \"@angular/material/snack-bar\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SocketServiceService {\n  public sessionId: string;\n  public allUsers: IConnection[];\n  public connectionsSubject = new Subject<IConnection[]>();\n  public connections = this.connectionsSubject.asObservable();\n\n  public channelSubject = new ReplaySubject<SafeResourceUrl | string>();\n  public currentChannel = this.channelSubject.asObservable();\n\n  private socket: any;\n\n  constructor(\n    private http: HttpClient,\n    private userVideoService: UserVideoService,\n    private sanitizer: DomSanitizer,\n    private snackbar: MatSnackBar\n  ) {\n    this.getSocket();\n    this.setupListeners();\n  }\n\n  getSocket() {\n    this.socket = window[\"socketIo\"]();\n    this.socket.on(\"connect\", () => {\n      console.log(\"socket.io connected\");\n    });\n  }\n\n  setupListeners() {\n    this.socket.on(\"channelJoined\", () => {\n      this.socket.emit(\"registerStreamer\", {});\n    });\n\n    this.socket.on(\"currentChannel\", (channel) => {\n      if (!!channel) {\n        channel = this.sanitizer.bypassSecurityTrustResourceUrl(channel);\n      }\n      this.channelSubject.next(channel);\n    });\n\n    this.socket.on(\"sendMessage\", (message: IMessage) => {\n      this.snackbar.open(\n        `${message.name || \"Anonymous\"} : ${message.message}`,\n        null,\n        { duration: 2000 }\n      );\n    });\n\n    this.socket.on(\"sessionId\", (data) => {});\n\n    this.socket.on(\"offer\", async (from, offer) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      if (connection) {\n        connection.peerConnection =\n          this.userVideoService.createPeerConnection();\n\n        const videoStreams = await navigator.mediaDevices.enumerateDevices();\n        const isVideoAvailable = videoStreams.some(\n          (d) => d.kind === \"videoinput\"\n        );\n\n        const streams = await navigator.mediaDevices.getUserMedia({\n          video: isVideoAvailable,\n          audio: {\n            echoCancellation: true,\n          },\n        });\n        streams.getTracks().forEach((track) => {\n          connection.peerConnection.addTrack(track, streams);\n        });\n        connection.peerConnection.onconnectionstatechange = (event) => {};\n        connection.peerConnection.onicecandidate = (event) => {\n          if (event.candidate) {\n            this.socket.emit(\n              \"iceCandidate\",\n              connection.sessionId,\n              this.socket.id,\n              event.candidate\n            );\n          }\n        };\n        connection.peerConnection.setRemoteDescription(\n          new RTCSessionDescription(offer)\n        );\n        connection.peerConnection.ontrack = (event: RTCTrackEvent) => {\n          connection.stream.addTrack(event.track);\n        };\n        const answer = await connection.peerConnection.createAnswer();\n        await connection.peerConnection.setLocalDescription(answer);\n        this.socket.emit(\n          \"answer\",\n          connection.sessionId,\n          this.socket.id,\n          answer\n        );\n      }\n    });\n\n    this.socket.on(\"answer\", async (from, answer) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      const remoteDesc = new RTCSessionDescription(answer);\n      connection.peerConnection.ontrack = (event: RTCTrackEvent) => {\n        connection.stream.addTrack(event.track);\n      };\n      await connection.peerConnection.setRemoteDescription(remoteDesc);\n    });\n\n    this.socket.on(\"iceCandidate\", async (from, iceCandidate) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      if (iceCandidate) {\n        try {\n          await connection.peerConnection.addIceCandidate(iceCandidate);\n        } catch (e) {\n          // ignore errors\n        }\n      }\n    });\n\n    this.socket.on(\"allStreamers\", (data) => {\n      data = data.filter((session) => session.sessionId !== this.socket.id);\n      data.forEach(async (d) => {\n        d.peerConnection = this.userVideoService.createPeerConnection();\n        const videoStreams = await navigator.mediaDevices.enumerateDevices();\n        const isVideoAvailable = videoStreams.some(\n          (d) => d.kind === \"videoinput\"\n        );\n\n        const streams = await navigator.mediaDevices.getUserMedia({\n          video: isVideoAvailable,\n          audio: {\n            echoCancellation: true,\n          },\n        });\n        streams.getTracks().forEach((track) => {\n          d.peerConnection.addTrack(track, streams);\n        });\n        d.peerConnection.onconnectionstatechange = (event) => {};\n        d.peerConnection.onicecandidate = (event) => {\n          if (event.candidate) {\n            this.socket.emit(\n              \"iceCandidate\",\n              d.sessionId,\n              this.socket.id,\n              event.candidate\n            );\n          }\n        };\n        const offer = await d.peerConnection.createOffer();\n        await d.peerConnection.setLocalDescription(offer);\n        this.socket.emit(\"offer\", d.sessionId, this.socket.id, offer);\n      });\n      this.allUsers = data;\n      this.allUsers.forEach((u) => {\n        u.stream = new MediaStream();\n      });\n      this.connectionsSubject.next(data);\n    });\n\n    this.socket.on(\"userDisconnected\", (sessionId) => {\n      const idx = this.allUsers.findIndex((u) => u.sessionId === sessionId);\n      if (idx > -1) {\n        this.allUsers.splice(idx, 1);\n      }\n      this.connectionsSubject.next(this.allUsers);\n    });\n\n    this.socket.on(\"newStreamerConnected\", (connection) => {\n      connection.stream = new MediaStream();\n      this.allUsers.push(connection);\n      this.connectionsSubject.next(this.allUsers);\n    });\n  }\n}\n\nexport interface IConnection {\n  sessionId: string;\n  name: string;\n  peerConnection: RTCPeerConnection;\n  stream: MediaStream;\n}\n\ninterface IMessage {\n  name: string;\n  message: string;\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { AppComponent } from \"./app.component\";\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public readonly userId: string;\n  public userName: string;\n\n  constructor() {\n    this.userId = uuidv4();\n    this.userName = `Guest[${this.userId.split('-')[0]}]`\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}