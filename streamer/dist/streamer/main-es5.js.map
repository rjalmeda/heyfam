{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/user-video.service.ts","webpack:///src/app/socket-service.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/user.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","socketService","userVideoService","connections","screenCapEnabled","subscribe","d","videoStreamsWindows","forEach","s","nativeElement","srcObject","c","find","connection","sessionId","id","stream","elRef","videoWindow","muted","play","addEventListener","selector","templateUrl","styleUrls","AppModule","declarations","imports","providers","bootstrap","UserVideoService","navigator","mediaDevices","getUserMedia","video","audio","displayMediaOptions","cursor","md","getDisplayMedia","configuration","offerToReceiveAudio","offerToReceiveVideo","iceServers","urls","RTCPeerConnection","providedIn","SocketServiceService","http","connectionsSubject","asObservable","getSocket","setupListeners","socket","window","on","emit","data","from","offer","allUsers","u","peerConnection","createPeerConnection","echoCancellation","streams","getTracks","track","addTrack","onconnectionstatechange","event","onicecandidate","candidate","setRemoteDescription","RTCSessionDescription","ontrack","console","log","createAnswer","answer","setLocalDescription","remoteDesc","iceCandidate","addIceCandidate","filter","session","createOffer","MediaStream","next","idx","findIndex","splice","push","routes","AppRoutingModule","forRoot","exports","UserService","userId","userName","split","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  Component,\n  ViewChildren,\n  ViewChild,\n  ElementRef,\n  AfterViewChecked,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { SocketServiceService, IConnection } from \"./socket-service.service\";\nimport { UserVideoService } from \"./user-video.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent implements AfterViewChecked {\n  public connections: IConnection[] = [];\n  public userCam: any;\n  public screenCapEnabled = false;\n\n  // @ViewChild(\"userWindow\", { static: false, read: ElementRef })\n  // private userWindow: ElementRef;\n\n  @ViewChildren(\"videoStreams\")\n  private videoStreamsWindows: ElementRef[];\n\n  constructor(\n    private socketService: SocketServiceService,\n    private userVideoService: UserVideoService\n  ) {\n    this.socketService.connections.subscribe((d) => {\n      this.connections = d;\n    });\n  }\n\n  public ngAfterViewChecked(): void {\n    this.videoStreamsWindows.forEach((s) => {\n      if (!s.nativeElement.srcObject) {\n        const c = this.connections.find(\n          (connection) => connection.sessionId === s.nativeElement.id\n        );\n        s.nativeElement.srcObject = c.stream;\n      }\n    });\n  }\n\n  getVideoWindow(id: string) {}\n\n  // public enableScreenCapture() {\n  //   this.screenCapEnabled = true;\n  //   this.userVideoService.getUserScreen().subscribe((screen: any) => {\n  //     screen.getVideoTracks()[0].addEventListener(\"ended\", () => {\n  //       this.enableUserCam();\n  //     });\n  //     this.playStream(this.userWindow, screen);\n  //   });\n  // }\n\n  // public enableUserCam(): void {\n  //   this.screenCapEnabled = false;\n  //   this.playStream(this.userWindow, this.userCam);\n  // }\n\n  public showConnections(connection?: any): void {\n    if (connection) {\n    } else {\n    }\n  }\n\n  private playStream(elRef: ElementRef, stream: any): void {\n    const videoWindow = elRef.nativeElement;\n    videoWindow.srcObject = stream;\n    videoWindow.muted = true;\n    videoWindow.play();\n    videoWindow.addEventListener(\"ended\", () => {});\n  }\n}\n","<ng-container *ngFor=\"let c of connections\">\n  <video #videoStreams width=\"100\" height=\"100\" autoplay [id]=\"c.sessionId\">\n  </video>\n</ng-container>\n\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { SocketServiceService } from './socket-service.service';\nimport { UserVideoService } from './user-video.service';\nimport { UserService } from './user.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [\n    SocketServiceService,\n    UserVideoService,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { from } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserVideoService {\n  constructor() { }\n\n  public getUserCam() {\n    return from(navigator.mediaDevices.getUserMedia({video: true, audio: true}));\n  }\n  \n  public getUserScreen() {\n    const displayMediaOptions = {\n      video: {\n        cursor: \"always\"\n      },\n      audio: false\n    };\n\n    const md:any = navigator.mediaDevices;\n    return from(md.getDisplayMedia(displayMediaOptions));\n  }\n\n  public createPeerConnection() {\n    \n    const configuration = {\n      configuration: {\n        offerToReceiveAudio: true,\n        offerToReceiveVideo: true\n      },\n      iceServers: [{ urls: 'stun:stun.l.google.com:19302' }]\n    }\n    return new RTCPeerConnection(configuration)\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as io from \"socket.io-client\";\nimport { Subject } from \"rxjs\";\nimport { UserVideoService } from \"./user-video.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SocketServiceService {\n  public sessionId: string;\n  public allUsers: IConnection[];\n  public connectionsSubject = new Subject<IConnection[]>();\n  public connections = this.connectionsSubject.asObservable();\n\n  private socket: any;\n\n  constructor(\n    private http: HttpClient,\n    private userVideoService: UserVideoService\n  ) {\n    this.getSocket();\n    this.setupListeners();\n  }\n\n  getSocket() {\n    this.socket = window[\"socketIo\"]();\n    this.socket.on(\"connect\", () => {\n      this.socket.emit(\"registerStreamer\", {});\n    });\n  }\n\n  setupListeners() {\n    this.socket.on(\"sessionId\", (data) => {});\n\n    this.socket.on(\"offer\", async (from, offer) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      if (connection) {\n        connection.peerConnection =\n          this.userVideoService.createPeerConnection();\n\n        const streams = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: {\n            echoCancellation: true,\n          },\n        });\n        streams.getTracks().forEach((track) => {\n          connection.peerConnection.addTrack(track, streams);\n        });\n        connection.peerConnection.onconnectionstatechange = (event) => {};\n        connection.peerConnection.onicecandidate = (event) => {\n          if (event.candidate) {\n            this.socket.emit(\n              \"iceCandidate\",\n              connection.sessionId,\n              this.socket.id,\n              event.candidate\n            );\n          }\n        };\n        connection.peerConnection.setRemoteDescription(\n          new RTCSessionDescription(offer)\n        );\n        connection.peerConnection.ontrack = (event: RTCTrackEvent) => {\n          console.log(event.track);\n          connection.stream.addTrack(event.track);\n        };\n        const answer = await connection.peerConnection.createAnswer();\n        await connection.peerConnection.setLocalDescription(answer);\n        this.socket.emit(\n          \"answer\",\n          connection.sessionId,\n          this.socket.id,\n          answer\n        );\n      }\n    });\n\n    this.socket.on(\"answer\", async (from, answer) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      const remoteDesc = new RTCSessionDescription(answer);\n      connection.peerConnection.ontrack = (event: RTCTrackEvent) => {\n        connection.stream.addTrack(event.track);\n      };\n      await connection.peerConnection.setRemoteDescription(remoteDesc);\n    });\n\n    this.socket.on(\"iceCandidate\", async (from, iceCandidate) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      if (iceCandidate) {\n        try {\n          await connection.peerConnection.addIceCandidate(iceCandidate);\n        } catch (e) {\n          // ignore errors\n        }\n      }\n    });\n\n    this.socket.on(\"allClients\", (data) => {\n      data = data.filter((session) => session.sessionId !== this.socket.id);\n      data.forEach(async (d) => {\n        d.peerConnection = this.userVideoService.createPeerConnection();\n        const streams = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: {\n            echoCancellation: true,\n          },\n        });\n        streams.getTracks().forEach((track) => {\n          d.peerConnection.addTrack(track, streams);\n        });\n        d.peerConnection.onconnectionstatechange = (event) => {};\n        d.peerConnection.onicecandidate = (event) => {\n          if (event.candidate) {\n            this.socket.emit(\n              \"iceCandidate\",\n              d.sessionId,\n              this.socket.id,\n              event.candidate\n            );\n          }\n        };\n        d.peerConnection.ontrack = (event: RTCTrackEvent) => {\n          console.log(event);\n          d.stream.addTrack(event.track);\n        };\n        const offer = await d.peerConnection.createOffer();\n        await d.peerConnection.setLocalDescription(offer);\n        this.socket.emit(\"offer\", d.sessionId, this.socket.id, offer);\n      });\n      this.allUsers = data;\n      this.allUsers.forEach((u) => {\n        u.stream = new MediaStream();\n      });\n      this.connectionsSubject.next(data);\n    });\n\n    this.socket.on(\"userDisconnected\", (sessionId) => {\n      const idx = this.allUsers.findIndex((u) => u.sessionId === sessionId);\n      if (idx > -1) {\n        this.allUsers.splice(idx, 1);\n      }\n      this.connectionsSubject.next(this.allUsers);\n    });\n\n    this.socket.on(\"newClientConnected\", (connection) => {\n      connection.stream = new MediaStream();\n      this.allUsers.push(connection);\n      this.connectionsSubject.next(this.allUsers);\n    });\n  }\n}\n\nexport interface IConnection {\n  sessionId: string;\n  name: string;\n  peerConnection: RTCPeerConnection;\n  stream: MediaStream;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public readonly userId: string;\n  public userName: string;\n\n  constructor() {\n    this.userId = uuidv4();\n    this.userName = `Guest[${this.userId.split('-')[0]}]`\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}