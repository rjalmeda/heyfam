{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/user-video.service.ts","./src/app/socket-service.service.ts","./src/app/app-routing.module.ts","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  Component,\n  ViewChildren,\n  ViewChild,\n  ElementRef,\n  AfterViewChecked,\n  SimpleChanges,\n  OnInit,\n} from \"@angular/core\";\nimport {\n  SocketServiceService,\n  IConnection,\n  IMessage,\n} from \"./socket-service.service\";\nimport { UserVideoService } from \"./user-video.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent implements OnInit {\n  public connections: IConnection[] = [];\n  public userCam: any;\n  public screenCapEnabled = false;\n  public sources: MediaDeviceInfo[] = [];\n  public streamUrl: string;\n  public name: string;\n  public message: string;\n  public messages: IMessage[] = [];\n\n  public get EnableVideoToggle() {\n    return this.sources.length > 1;\n  }\n\n  @ViewChild(\"userWindow\", { static: false, read: ElementRef })\n  private userWindow: ElementRef;\n\n  // @ViewChildren(\"videoStreams\")\n  // private videoStreamsWindows: ElementRef[];\n\n  constructor(\n    private socketService: SocketServiceService,\n    private userVideoService: UserVideoService\n  ) {\n    this.socketService.connections.subscribe((d) => {\n      this.connections = d;\n    });\n    this.socketService.currentChannel.subscribe((channel) => {\n      this.streamUrl = channel;\n    });\n    // this.userVideoService.getFeed().then((cam) => {\n    //   this.userCam = cam;\n    //   this.playStream(this.userWindow, cam);\n    // });\n  }\n\n  // public ngAfterViewChecked(): void {\n  //   this.videoStreamsWindows.forEach((s) => {\n  //     if (!s.nativeElement.srcObject) {\n  //       const c = this.connections.find(\n  //         (connection) => connection.sessionId === s.nativeElement.id\n  //       );\n  //       s.nativeElement.srcObject = c.stream;\n  //     }\n  //   });\n  // }\n\n  public ngOnInit() {\n    this.messages = this.socketService.messages;\n  }\n\n  public enableScreenCapture() {\n    this.screenCapEnabled = true;\n    this.userVideoService.getUserScreen().subscribe((screen: any) => {\n      screen.getVideoTracks()[0].addEventListener(\"ended\", () => {\n        this.enableUserCam();\n      });\n      this.playStream(this.userWindow, screen);\n    });\n  }\n\n  public enableUserCam(): void {\n    this.screenCapEnabled = false;\n    this.playStream(this.userWindow, this.userCam);\n  }\n\n  public showConnections(connection?: any): void {\n    if (connection) {\n    } else {\n    }\n  }\n\n  public clearUrl(): void {\n    this.streamUrl = \"\";\n  }\n\n  public updateStream(): void {\n    if (confirm(\"Update Current Channel\")) {\n      this.socketService.updateChannel(this.streamUrl);\n    }\n  }\n\n  public sendMessage(): void {\n    if (this.message) {\n      this.socketService.sendMessage({\n        name: this.name,\n        message: this.message,\n      });\n    }\n    this.message = \"\";\n  }\n\n  private playStream(elRef: ElementRef, stream: any): void {\n    const videoWindow = elRef.nativeElement;\n    videoWindow.srcObject = stream;\n    videoWindow.muted = true;\n    videoWindow.play();\n    videoWindow.addEventListener(\"ended\", () => {});\n  }\n}\n","<mat-card>\n  <mat-card-header>\n    <mat-card-title>Stream Camera Client</mat-card-title>\n  </mat-card-header>\n  <mat-card-content>\n    <mat-form-field appearance=\"fill\" style=\"width: 90vw\">\n      <mat-label>Name</mat-label>\n      <input\n        matInput\n        type=\"text\"\n        [(ngModel)]=\"name\"\n        [ngModelOptions]=\"{ standalone: true }\"\n      />\n    </mat-form-field>\n    <br />\n\n    <mat-form-field appearance=\"fill\" style=\"width: 90vw\">\n      <mat-label>Current Channel</mat-label>\n      <input\n        matInput\n        type=\"text\"\n        [(ngModel)]=\"streamUrl\"\n        [ngModelOptions]=\"{ standalone: true }\"\n      />\n    </mat-form-field>\n    <br />\n    <button mat-raised-button (click)=\"clearUrl()\">Clear</button>\n    <button mat-raised-button (click)=\"updateStream()\">Update Stream</button>\n\n    <br />\n\n    <div style=\"margin-top: 2em; height: 40vh; background: rgb(211, 211, 211)\">\n      <ng-container *ngFor=\"let m of messages\">\n        <span style=\"font-style: italic\">{{ m.name || \"anonymous\" }}</span\n        ><span> : {{ m.message }}</span\n        ><br />\n      </ng-container>\n    </div>\n\n    <form (submit)=\"sendMessage()\" style=\"margin-top: 2em\">\n      <mat-form-field appearance=\"fill\" style=\"width: 60vw\">\n        <mat-label>Message</mat-label>\n        <input\n          matInput\n          type=\"text\"\n          [(ngModel)]=\"message\"\n          [ngModelOptions]=\"{ standalone: true }\"\n        />\n      </mat-form-field>\n      <button mat-raised-button type=\"submit\" style=\"margin-left: 1em\">\n        Send\n      </button>\n    </form>\n  </mat-card-content>\n</mat-card>\n","import { BrowserModule } from \"@angular/platform-browser\";\nimport { NgModule } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatIconModule } from \"@angular/material/icon\";\n\nimport { AppRoutingModule } from \"./app-routing.module\";\nimport { AppComponent } from \"./app.component\";\nimport { HttpClientModule } from \"@angular/common/http\";\n\nimport { SocketServiceService } from \"./socket-service.service\";\nimport { UserVideoService } from \"./user-video.service\";\nimport { UserService } from \"./user.service\";\nimport { BrowserAnimationsModule } from \"@angular/platform-browser/animations\";\n\n@NgModule({\n  declarations: [AppComponent],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatIconModule,\n  ],\n  providers: [SocketServiceService, UserVideoService, UserService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Injectable } from \"@angular/core\";\nimport { from, Observable, ReplaySubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserVideoService {\n  constructor() {}\n\n  public async getFeed() {\n    const videoStreams = await navigator.mediaDevices.enumerateDevices();\n    const isVideoAvailable = videoStreams.some((d) => d.kind === \"videoinput\");\n\n    return await navigator.mediaDevices.getUserMedia({\n      video: isVideoAvailable,\n      audio: {\n        echoCancellation: true,\n      },\n    });\n  }\n\n  public getUserScreen() {\n    const displayMediaOptions = {\n      video: {\n        cursor: \"always\",\n      },\n      audio: false,\n    };\n\n    const md: any = navigator.mediaDevices;\n    return from(md.getDisplayMedia(displayMediaOptions));\n  }\n\n  public createPeerConnection() {\n    const configuration = {\n      configuration: {\n        offerToReceiveAudio: true,\n        offerToReceiveVideo: true,\n      },\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n    };\n    return new RTCPeerConnection(configuration);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as io from \"socket.io-client\";\nimport { ReplaySubject, Subject } from \"rxjs\";\nimport { UserVideoService } from \"./user-video.service\";\nimport { DomSanitizer } from \"@angular/platform-browser\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SocketServiceService {\n  public sessionId: string;\n  public allUsers: IConnection[];\n  public connectionsSubject = new Subject<IConnection[]>();\n  public connections = this.connectionsSubject.asObservable();\n  public channelSubject = new ReplaySubject<string>();\n  public currentChannel = this.channelSubject.asObservable();\n  public messages: IMessage[] = [];\n\n  private socket: any;\n  private camEnabled = false;\n\n  constructor(\n    private http: HttpClient,\n    private userVideoService: UserVideoService,\n    private sanitizer: DomSanitizer\n  ) {\n    this.getSocket();\n    this.setupListeners();\n  }\n\n  updateChannel(channel: string) {\n    this.socket.emit(\"updateChannel\", channel);\n  }\n\n  sendMessage(message: IMessage) {\n    this.messages.push(message);\n    this.socket.emit(\"sendMessage\", message);\n  }\n\n  getSocket() {\n    this.socket = window[\"socketIo\"]();\n    this.socket.on(\"connect\", () => {\n      this.socket.emit(\"registerClient\", {});\n    });\n  }\n\n  setupListeners() {\n    this.socket.on(\"channelJoined\", () => {\n      console.log(\"channel joined\");\n      this.socket.emit(\"registerClient\", {});\n    });\n\n    this.socket.on(\"currentChannel\", (channel) => {\n      this.channelSubject.next(channel);\n    });\n\n    this.socket.on(\"sendMessage\", (message: IMessage) => {\n      this.messages.push(message);\n    });\n\n    this.socket.on(\"sessionId\", (data) => {});\n\n    if (this.camEnabled) {\n      this.socket.on(\"offer\", async (from, offer) => {\n        const connection = this.allUsers.find((u) => u.sessionId === from);\n        if (connection) {\n          connection.peerConnection =\n            this.userVideoService.createPeerConnection();\n\n          const videoStreams = await navigator.mediaDevices.enumerateDevices();\n          const isVideoAvailable = videoStreams.some(\n            (d) => d.kind === \"videoinput\"\n          );\n\n          const streams = await navigator.mediaDevices.getUserMedia({\n            video: isVideoAvailable,\n            audio: {\n              echoCancellation: true,\n            },\n          });\n          streams.getTracks().forEach((track) => {\n            connection.peerConnection.addTrack(track, streams);\n          });\n\n          this.userVideoService.getFeed().then((f) => {\n            const tracks = f.getTracks();\n            const senders = connection.peerConnection.getSenders();\n            senders.forEach((s) => {\n              const track = tracks.find((t) => t.kind === s.track.kind);\n              s.replaceTrack(track);\n            });\n          });\n\n          connection.peerConnection.onconnectionstatechange = (event) => {};\n          connection.peerConnection.onicecandidate = (event) => {\n            if (event.candidate) {\n              this.socket.emit(\n                \"iceCandidate\",\n                connection.sessionId,\n                this.socket.id,\n                event.candidate\n              );\n            }\n          };\n          connection.peerConnection.setRemoteDescription(\n            new RTCSessionDescription(offer)\n          );\n          // connection.peerConnection.ontrack = (event: RTCTrackEvent) => {\n          //   connection.stream.addTrack(event.track);\n          // };\n          const answer = await connection.peerConnection.createAnswer();\n          await connection.peerConnection.setLocalDescription(answer);\n          this.socket.emit(\n            \"answer\",\n            connection.sessionId,\n            this.socket.id,\n            answer\n          );\n        }\n      });\n\n      this.socket.on(\"answer\", async (from, answer) => {\n        const connection = this.allUsers.find((u) => u.sessionId === from);\n        const remoteDesc = new RTCSessionDescription(answer);\n        // connection.peerConnection.ontrack = (event: RTCTrackEvent) => {\n        //   connection.stream.addTrack(event.track);\n        // };\n        await connection.peerConnection.setRemoteDescription(remoteDesc);\n      });\n\n      this.socket.on(\"iceCandidate\", async (from, iceCandidate) => {\n        const connection = this.allUsers.find((u) => u.sessionId === from);\n        if (iceCandidate) {\n          try {\n            await connection.peerConnection.addIceCandidate(iceCandidate);\n          } catch (e) {\n            // ignore errors\n          }\n        }\n      });\n\n      this.socket.on(\"allStreamers\", (data) => {\n        data = data.filter((session) => session.sessionId !== this.socket.id);\n        data.forEach(async (d) => {\n          d.peerConnection = this.userVideoService.createPeerConnection();\n          const streams = await navigator.mediaDevices.getUserMedia({\n            video: true,\n            audio: {\n              echoCancellation: true,\n            },\n          });\n          streams.getTracks().forEach((track) => {\n            d.peerConnection.addTrack(track, streams);\n          });\n          d.peerConnection.onconnectionstatechange = (event) => {};\n          d.peerConnection.onicecandidate = (event) => {\n            if (event.candidate) {\n              this.socket.emit(\n                \"iceCandidate\",\n                d.sessionId,\n                this.socket.id,\n                event.candidate\n              );\n            }\n          };\n          const offer = await d.peerConnection.createOffer();\n          await d.peerConnection.setLocalDescription(offer);\n          this.socket.emit(\"offer\", d.sessionId, this.socket.id, offer);\n        });\n        this.allUsers = data;\n        // this.allUsers.forEach((u) => {\n        //   u.stream = new MediaStream();\n        // });\n        this.connectionsSubject.next(data);\n      });\n\n      this.socket.on(\"newStreamerConnected\", (connection) => {\n        // connection.stream = new MediaStream();\n        this.allUsers.push(connection);\n        this.connectionsSubject.next(this.allUsers);\n      });\n\n      this.socket.on(\"userDisconnected\", (sessionId) => {\n        const idx = this.allUsers.findIndex((u) => u.sessionId === sessionId);\n        if (idx > -1) {\n          this.allUsers.splice(idx, 1);\n        }\n        this.connectionsSubject.next(this.allUsers);\n      });\n    }\n  }\n}\n\nexport interface IConnection {\n  sessionId: string;\n  name: string;\n  peerConnection: RTCPeerConnection;\n}\n\nexport interface IMessage {\n  name: string;\n  message: string;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public readonly userId: string;\n  public userName: string;\n\n  constructor() {\n    this.userId = uuidv4();\n    this.userName = `Guest[${this.userId.split('-')[0]}]`\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}