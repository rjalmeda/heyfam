{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/user-video.service.ts","webpack:///src/app/socket-service.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/user.service.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","AppComponent","socketService","userVideoService","connections","screenCapEnabled","sources","subscribe","d","currentFeed","cam","userCam","playStream","userWindow","id","getUserScreen","screen","getVideoTracks","addEventListener","enableUserCam","connection","EnableVideoToggle","console","log","nextSource","elRef","stream","videoWindow","nativeElement","srcObject","muted","play","length","selector","templateUrl","styleUrls","read","AppModule","declarations","imports","providers","bootstrap","UserVideoService","currentSource","replayVideo","asObservable","enumerateVideoDevices","deviceId","navigator","mediaDevices","getUserMedia","video","audio","echoCancellation","next","displayMediaOptions","cursor","md","getDisplayMedia","configuration","offerToReceiveAudio","offerToReceiveVideo","iceServers","urls","RTCPeerConnection","updateFeed","enumerateDevices","devices","videoDevices","filter","device","kind","providedIn","SocketServiceService","http","connectionsSubject","getSocket","setupListeners","socket","window","on","emit","data","from","offer","allUsers","find","u","sessionId","peerConnection","createPeerConnection","streams","getTracks","forEach","track","addTrack","f","tracks","senders","getSenders","s","t","replaceTrack","onconnectionstatechange","event","onicecandidate","candidate","setRemoteDescription","RTCSessionDescription","createAnswer","answer","setLocalDescription","remoteDesc","iceCandidate","addIceCandidate","session","createOffer","idx","findIndex","splice","push","routes","AppRoutingModule","forRoot","exports","UserService","userId","userName","split","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {\n  Component,\n  ViewChildren,\n  ViewChild,\n  ElementRef,\n  AfterViewChecked,\n  SimpleChanges,\n} from \"@angular/core\";\nimport { SocketServiceService, IConnection } from \"./socket-service.service\";\nimport { UserVideoService } from \"./user-video.service\";\n\n@Component({\n  selector: \"app-root\",\n  templateUrl: \"./app.component.html\",\n  styleUrls: [\"./app.component.scss\"],\n})\nexport class AppComponent {\n  public connections: IConnection[] = [];\n  public userCam: any;\n  public screenCapEnabled = false;\n  public sources: MediaDeviceInfo[] = [];\n  public get EnableVideoToggle() {\n    return this.sources.length > 1;\n  }\n\n  @ViewChild(\"userWindow\", { static: false, read: ElementRef })\n  private userWindow: ElementRef;\n\n  constructor(\n    private socketService: SocketServiceService,\n    private userVideoService: UserVideoService\n  ) {\n    this.socketService.connections.subscribe((d) => {\n      this.connections = d;\n    });\n    this.userVideoService.currentFeed.subscribe((cam) => {\n      this.sources = this.userVideoService.sources;\n      this.userCam = cam;\n      this.playStream(this.userWindow, cam);\n    });\n  }\n\n  getVideoWindow(id: string) {}\n\n  public enableScreenCapture() {\n    this.screenCapEnabled = true;\n    this.userVideoService.getUserScreen().subscribe((screen: any) => {\n      screen.getVideoTracks()[0].addEventListener(\"ended\", () => {\n        this.enableUserCam();\n      });\n      this.playStream(this.userWindow, screen);\n    });\n  }\n\n  public enableUserCam(): void {\n    this.screenCapEnabled = false;\n    this.playStream(this.userWindow, this.userCam);\n  }\n\n  public showConnections(connection?: any): void {\n    if (connection) {\n    } else {\n    }\n  }\n\n  public nextSource(): void {\n    if (this.EnableVideoToggle) {\n      console.log(\"toggling devices\");\n      this.userVideoService.nextSource();\n    }\n  }\n\n  private playStream(elRef: ElementRef, stream: any): void {\n    const videoWindow = elRef.nativeElement;\n    videoWindow.srcObject = stream;\n    videoWindow.muted = true;\n    videoWindow.play();\n    videoWindow.addEventListener(\"ended\", () => {});\n  }\n}\n","<!-- <ng-container *ngFor=\"let c of connections\">\n  <video #videoStreams width=\"100\" height=\"100\" autoplay style=\"border: 1px solid blue;\" [id]=\"c.sessionId\">\n  </video>\n</ng-container> -->\n\n<div class=\"video-container\" (click)=\"nextSource()\">\n  <video #userWindow autoplay>\n  </video>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { SocketServiceService } from './socket-service.service';\nimport { UserVideoService } from './user-video.service';\nimport { UserService } from './user.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [\n    SocketServiceService,\n    UserVideoService,\n    UserService\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { from, Observable, ReplaySubject } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class UserVideoService {\n  public sources: MediaDeviceInfo[] = [];\n  public currentSource: number = 0;\n  public replayVideo = new ReplaySubject<MediaStream>();\n  public currentFeed = this.replayVideo.asObservable();\n\n  constructor() {\n    this.enumerateVideoDevices();\n  }\n\n  public async updateFeed() {\n    const { deviceId } = this.sources[this.currentSource];\n    this.replayVideo.next(\n      await navigator.mediaDevices.getUserMedia({\n        video: {\n          deviceId,\n        },\n        audio: {\n          echoCancellation: true,\n        },\n      })\n    );\n  }\n\n  public getUserScreen() {\n    const displayMediaOptions = {\n      video: {\n        cursor: \"always\",\n      },\n      audio: false,\n    };\n\n    const md: any = navigator.mediaDevices;\n    return from(md.getDisplayMedia(displayMediaOptions));\n  }\n\n  public createPeerConnection() {\n    const configuration = {\n      configuration: {\n        offerToReceiveAudio: true,\n        offerToReceiveVideo: true,\n      },\n      iceServers: [{ urls: \"stun:stun.l.google.com:19302\" }],\n    };\n    return new RTCPeerConnection(configuration);\n  }\n\n  public nextSource() {\n    if (this.currentSource >= this.sources.length - 1) {\n      this.currentSource = 0;\n    } else {\n      this.currentSource++;\n    }\n    this.updateFeed();\n  }\n\n  private async enumerateVideoDevices() {\n    const devices = await navigator.mediaDevices.enumerateDevices();\n    const videoDevices = devices.filter(\n      (device) => device.kind === \"videoinput\"\n    );\n    this.sources = videoDevices;\n    this.currentSource = 0;\n    this.updateFeed();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport * as io from \"socket.io-client\";\nimport { Subject } from \"rxjs\";\nimport { UserVideoService } from \"./user-video.service\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class SocketServiceService {\n  public sessionId: string;\n  public allUsers: IConnection[];\n  public connectionsSubject = new Subject<IConnection[]>();\n  public connections = this.connectionsSubject.asObservable();\n\n  private socket: any;\n\n  constructor(\n    private http: HttpClient,\n    private userVideoService: UserVideoService\n  ) {\n    this.getSocket();\n    this.setupListeners();\n  }\n\n  getSocket() {\n    this.socket = window[\"socketIo\"]();\n    this.socket.on(\"connect\", () => {\n      this.socket.emit(\"registerClient\", {});\n    });\n  }\n\n  setupListeners() {\n    this.socket.on(\"sessionId\", (data) => {});\n\n    this.socket.on(\"offer\", async (from, offer) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      if (connection) {\n        connection.peerConnection =\n          this.userVideoService.createPeerConnection();\n\n        const streams = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: {\n            echoCancellation: true,\n          },\n        });\n        streams.getTracks().forEach((track) => {\n          connection.peerConnection.addTrack(track, streams);\n        });\n\n        this.userVideoService.currentFeed.subscribe((f) => {\n          const tracks = f.getTracks();\n          const senders = connection.peerConnection.getSenders();\n          senders.forEach((s) => {\n            const track = tracks.find((t) => t.kind === s.track.kind);\n            s.replaceTrack(track);\n          });\n        });\n\n        connection.peerConnection.onconnectionstatechange = (event) => {};\n        connection.peerConnection.onicecandidate = (event) => {\n          if (event.candidate) {\n            this.socket.emit(\n              \"iceCandidate\",\n              connection.sessionId,\n              this.socket.id,\n              event.candidate\n            );\n          }\n        };\n        connection.peerConnection.setRemoteDescription(\n          new RTCSessionDescription(offer)\n        );\n        // connection.peerConnection.ontrack = (event: RTCTrackEvent) => {\n        //   connection.stream.addTrack(event.track);\n        // };\n        const answer = await connection.peerConnection.createAnswer();\n        await connection.peerConnection.setLocalDescription(answer);\n        this.socket.emit(\n          \"answer\",\n          connection.sessionId,\n          this.socket.id,\n          answer\n        );\n      }\n    });\n\n    this.socket.on(\"answer\", async (from, answer) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      const remoteDesc = new RTCSessionDescription(answer);\n      // connection.peerConnection.ontrack = (event: RTCTrackEvent) => {\n      //   connection.stream.addTrack(event.track);\n      // };\n      await connection.peerConnection.setRemoteDescription(remoteDesc);\n    });\n\n    this.socket.on(\"iceCandidate\", async (from, iceCandidate) => {\n      const connection = this.allUsers.find((u) => u.sessionId === from);\n      if (iceCandidate) {\n        try {\n          await connection.peerConnection.addIceCandidate(iceCandidate);\n        } catch (e) {\n          // ignore errors\n        }\n      }\n    });\n\n    this.socket.on(\"allStreamers\", (data) => {\n      data = data.filter((session) => session.sessionId !== this.socket.id);\n      data.forEach(async (d) => {\n        d.peerConnection = this.userVideoService.createPeerConnection();\n        const streams = await navigator.mediaDevices.getUserMedia({\n          video: true,\n          audio: {\n            echoCancellation: true,\n          },\n        });\n        streams.getTracks().forEach((track) => {\n          d.peerConnection.addTrack(track, streams);\n        });\n        d.peerConnection.onconnectionstatechange = (event) => {};\n        d.peerConnection.onicecandidate = (event) => {\n          if (event.candidate) {\n            this.socket.emit(\n              \"iceCandidate\",\n              d.sessionId,\n              this.socket.id,\n              event.candidate\n            );\n          }\n        };\n        const offer = await d.peerConnection.createOffer();\n        await d.peerConnection.setLocalDescription(offer);\n        this.socket.emit(\"offer\", d.sessionId, this.socket.id, offer);\n      });\n      this.allUsers = data;\n      // this.allUsers.forEach((u) => {\n      //   u.stream = new MediaStream();\n      // });\n      this.connectionsSubject.next(data);\n    });\n\n    this.socket.on(\"userDisconnected\", (sessionId) => {\n      const idx = this.allUsers.findIndex((u) => u.sessionId === sessionId);\n      if (idx > -1) {\n        this.allUsers.splice(idx, 1);\n      }\n      this.connectionsSubject.next(this.allUsers);\n    });\n\n    this.socket.on(\"newStreamerConnected\", (connection) => {\n      // connection.stream = new MediaStream();\n      this.allUsers.push(connection);\n      this.connectionsSubject.next(this.allUsers);\n    });\n  }\n}\n\nexport interface IConnection {\n  sessionId: string;\n  name: string;\n  peerConnection: RTCPeerConnection;\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport { v4 as uuidv4 } from 'uuid';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  public readonly userId: string;\n  public userName: string;\n\n  constructor() {\n    this.userId = uuidv4();\n    this.userName = `Guest[${this.userId.split('-')[0]}]`\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}